# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    app.uploadUrl: '%env(APP_UPLOAD_URL)%'
    app.uploadPath: '%env(APP_UPLOAD_TARGET_PATH)%'

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/'
        exclude:
            - '../src/DependencyInjection/'
            - '../src/Entity/'
            - '../src/Kernel.php'
            - '../src/Tests/'

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    App\Controller\Frontend\:
        resource: '../src/Controller/Frontend/'
        tags: ['controller.service_arguments']

    App\Controller\Backend\:
        resource: '../src/Controller/Backend/'
        tags: ['controller.service_arguments']

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones

    # Менеджер загрузки файлов
    App\Service\FileManager\FileManagerService:
        arguments:
            $targetPath: "%app.uploadPath%"
            $folderPath: "/files"

    # Менеджер загрузки изображений
    App\Service\FileManager\ImageManagerService:
        arguments:
            $targetPath: "%app.uploadPath%"
            $folderPath: "/images"

    # Entity Listeners
    # @see https://www.doctrine-project.org/projects/doctrine-orm/en/2.7/reference/events.html
    App\EventListener\User\UserListener:
        tags:
            - { name: doctrine.orm.entity_listener, event: preUpdate, entity: App\Entity\User\User, lazy: true }
    App\EventListener\Question\CategoryListener:
        tags:
            - { name: doctrine.orm.entity_listener, event: postPersist, entity: App\Entity\Question\Category, lazy: true }
            - { name: doctrine.orm.entity_listener, event: preUpdate, entity: App\Entity\Question\Category, lazy: true }
    App\EventListener\Question\QuestionListener:
        tags:
            - { name: doctrine.orm.entity_listener, event: postPersist, entity: App\Entity\Question\Question, lazy: true }
            - { name: doctrine.orm.entity_listener, event: preUpdate, entity: App\Entity\Question\Question, lazy: true }
            - { name: doctrine.orm.entity_listener, event: postUpdate, entity: App\Entity\Question\Question, lazy: true }
    App\EventListener\Question\AnswerListener:
        tags:
            - { name: doctrine.orm.entity_listener, event: postPersist, entity: App\Entity\Question\Answer, lazy: true }
            - { name: doctrine.orm.entity_listener, event: postUpdate, entity: App\Entity\Question\Answer, lazy: true }

    # Session Storage
    Symfony\Component\HttpFoundation\Session\Storage\Handler\PdoSessionHandler:
        arguments:
            - '%env(DATABASE_URL)%'
